<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xamarin.PropertyEditing.Windows"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:vm="clr-namespace:Xamarin.PropertyEditing.ViewModels;assembly=Xamarin.PropertyEditing">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Themes/VS.Light.xaml" />
	</ResourceDictionary.MergedDictionaries>
	
	<Style TargetType="{x:Type local:EnumEditorControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:EnumEditorControl}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition SharedSizeGroup="Label" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>

						<Label Grid.Column="0" Content="{TemplateBinding Label}" Target="{Binding ElementName=ComboBox, Mode=OneTime}" />
                        <ComboBox x:Name="ComboBox" Grid.Column="1" ItemsSource="{Binding PossibleValues}" SelectedItem="{Binding ValueName}" VerticalContentAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<local:NumericTemplateSelector x:Key="NumericTemplateSelector">
		<local:NumericTemplateSelector.FloatingTemplate>
			<DataTemplate DataType="vm:FloatingPropertyViewModel">
				<local:DoubleUpDownControl Value="{Binding Value}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" />
			</DataTemplate>
		</local:NumericTemplateSelector.FloatingTemplate>
		<local:NumericTemplateSelector.IntegerTemplate>
			<DataTemplate DataType="vm:IntegerPropertyViewModel">
				<local:IntegerUpDownControl Value="{Binding Value}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" />
			</DataTemplate>
		</local:NumericTemplateSelector.IntegerTemplate>
	</local:NumericTemplateSelector>

	<Style TargetType="local:NumericEditorControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:NumericEditorControl">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition SharedSizeGroup="Label" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>

						<Label Grid.Column="0" Content="{TemplateBinding Label}" />
						<ContentPresenter Grid.Column="1" Content="{Binding}" ContentTemplateSelector="{StaticResource NumericTemplateSelector}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:DoubleUpDownControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:DoubleUpDownControl}">
					<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBox Name="TextBox" IsEnabled="{TemplateBinding IsEnabled}" Grid.Column="0" VerticalContentAlignment="Center" />
						
						<StackPanel Grid.Column="1">
							<Button x:Name="Up" IsEnabled="{TemplateBinding IsEnabled}" FontSize="8" FontFamily="Segoe UI Symbol" Content="⋀" />
							<Button x:Name="Down" IsEnabled="{TemplateBinding IsEnabled}" FontSize="8" FontFamily="Segoe UI Symbol" Content="⋁" />
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="local:IntegerUpDownControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IntegerUpDownControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox Name="TextBox" IsEnabled="{TemplateBinding IsEnabled}" Grid.Column="0" VerticalContentAlignment="Center" />
                        <StackPanel Grid.Column="1">
                            <Button x:Name="Up" IsEnabled="{TemplateBinding IsEnabled}" FontSize="8" FontFamily="Segoe UI Symbol" Content="⋀" />
                            <Button x:Name="Down" IsEnabled="{TemplateBinding IsEnabled}" FontSize="8" FontFamily="Segoe UI Symbol" Content="⋁" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:StringEditorControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:StringEditorControl">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition SharedSizeGroup="Label" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>

						<Label Name="Label" Target="{Binding ElementName=TextBox,Mode=OneTime}" Content="{TemplateBinding Label}" />
                        <TextBox Name="TextBox" AutomationProperties.LabeledBy="{Binding ElementName=Label,Mode=OneTime}" Grid.Column="1" Text="{Binding Value}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" VerticalContentAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="local:BoolEditorControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:BoolEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Label" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Name="Label" Target="{Binding ElementName=CheckBox,Mode=OneTime}" Content="{TemplateBinding Label}" />
                        <CheckBox Name="CheckBox" AutomationProperties.LabeledBy="{Binding ElementName=Label,Mode=OneTime}" Grid.Column="1" IsChecked="{Binding Value}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" Content="{Binding Value}" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:PointEditorControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PointEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Label" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Target="{Binding ElementName=StackPanel,Mode=OneTime}" Content="{TemplateBinding Label}" />
                        <StackPanel Name="StackPanel" Orientation="Horizontal" Grid.Column="1">
                            <Label Name="XLabel" Target="{Binding ElementName=XTextBox,Mode=OneTime}" Content="X" />
                            <local:DoubleUpDownControl x:Name="XTextBox" Value="{Binding Value.X}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=XLabel,Mode=OneTime}"/>
                            <Label Name="YLabel" Target="{Binding ElementName=YTextBox,Mode=OneTime}" Content="Y" />
                            <local:DoubleUpDownControl x:Name="YTextBox" Value="{Binding Value.Y}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=YLabel,Mode=OneTime}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SizeEditorControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SizeEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Label" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Target="{Binding ElementName=StackPanel,Mode=OneTime}" Content="{TemplateBinding Label}" />
                        <StackPanel Name="StackPanel" Orientation="Horizontal" Grid.Column="1">
                            <Label Name="WidthLabel" Target="{Binding ElementName=WidthTextBox,Mode=OneTime}" Content="Width" />
                            <local:DoubleUpDownControl Value="{Binding Value.Width}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=WidthLabel,Mode=OneTime}"/>
                            <Label Name="HeightLabel" Target="{Binding ElementName=HeightTextBox,Mode=OneTime}" Content="Height" />
                            <local:DoubleUpDownControl Value="{Binding Value.Height}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=HeightLabel,Mode=OneTime}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ThicknessEditorControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ThicknessEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Label" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Target="{Binding ElementName=StackPanel,Mode=OneTime}" Content="{TemplateBinding Label}" />
                        <StackPanel Name="StackPanel" Orientation="Horizontal" Grid.Column="1">
                            <Label Name="LeftLabel" Target="{Binding ElementName=LeftTextBox,Mode=OneTime}" Content="Left" />
                            <local:IntegerUpDownControl Value="{Binding Value.Left}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=LeftLabel,Mode=OneTime}"/>
                            <Label Name="TopLabel" Target="{Binding ElementName=TopTextBox,Mode=OneTime}" Content="Top" />
                            <local:IntegerUpDownControl Value="{Binding Value.Top}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=TopLabel,Mode=OneTime}"/>
                            <Label Name="RightLabel" Target="{Binding ElementName=RightTextBox,Mode=OneTime}" Content="Right" />
                            <local:IntegerUpDownControl Value="{Binding Value.Right}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=RightLabel,Mode=OneTime}" />
                            <Label Name="BottomLabel" Target="{Binding ElementName=BottomTextBox,Mode=OneTime}" Content="Bottom" />
                            <local:IntegerUpDownControl Value="{Binding Value.Bottom}" MaximumValue="{Binding MaximumValue}" MinimumValue="{Binding MinimumValue}" IsEnabled="{Binding Property.CanWrite,Mode=OneTime}" AutomationProperties.LabeledBy="{Binding ElementName=BottomLabel,Mode=OneTime}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:PropertyEditorPanel">
		<Setter Property="Grid.IsSharedSizeScope" Value="True" />
		<Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:PropertyEditorPanel">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<TextBox Name="search" Grid.Row="0" AutomationProperties.Name="Search" />

							<StackPanel Grid.Row="1" Orientation="Horizontal">
								<StackPanel.Resources>
									<ObjectDataProvider x:Key="arrangeModes" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
										<ObjectDataProvider.MethodParameters>
											<x:Type TypeName="local:PropertyArrangeMode" />
										</ObjectDataProvider.MethodParameters>
									</ObjectDataProvider>
								</StackPanel.Resources>
								<!-- TODO localize !-->
								<Label Name="arrangeLabel" Target="{Binding ElementName=arrangeBy,Mode=OneTime}">Arrange by:</Label>
								<ComboBox Name="arrangeBy" AutomationProperties.LabeledBy="{Binding ElementName=arrangeLabel,Mode=OneTime}" SelectedItem="{Binding ArrangeMode,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding Source={StaticResource arrangeModes}}" />
							</StackPanel>

							<ScrollViewer Grid.Row="2">
								<ItemsControl Name="propertyItems" ItemsSource="{Binding Properties}" Focusable="False">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="vm:PropertyViewModel">
											<local:PropertyPresenter Label="{Binding Property.Name}" Content="{Binding}">
												<local:PropertyPresenter.ContentTemplateSelector>
													<local:EditorPropertySelector />
												</local:PropertyPresenter.ContentTemplateSelector>
											</local:PropertyPresenter>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
									<ItemsControl.GroupStyle>
										<GroupStyle>
											<GroupStyle.ContainerStyle>
												<Style TargetType="GroupItem">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="GroupItem">
																<Expander Header="{Binding Name}">
																	<ItemsPresenter />
																</Expander>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</GroupStyle.ContainerStyle>
										</GroupStyle>
									</ItemsControl.GroupStyle>
								</ItemsControl>
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>